import{_ as a,c as s,o as i,ae as t}from"./chunks/framework.BZmsc3_l.js";const d=JSON.parse('{"title":"Create Packages","description":"","frontmatter":{"outline":"deep","title":"Create Packages","editLink":true},"headers":[],"relativePath":"package-management/create-packages.md","filePath":"package-management/create-packages.md"}'),l={name:"package-management/create-packages.md"};function p(n,e,c,h,r,k){return i(),s("div",null,e[0]||(e[0]=[t(`<h1 id="create-packages" tabindex="-1">Create Packages <a class="header-anchor" href="#create-packages" aria-label="Permalink to &quot;Create Packages&quot;">​</a></h1><h2 id="basic-create" tabindex="-1">Basic Create <a class="header-anchor" href="#basic-create" aria-label="Permalink to &quot;Basic Create&quot;">​</a></h2><p>In <code>shit</code> cli, you can run <code>shit --create &lt;Package Name&gt;</code> to create a default package with <a href="https://docs.fileformat.com/compression/zip/" target="_blank" rel="noreferrer">zip</a> format. This package just includes a package.json and an empty .pkgtype.</p><p>For example: Run <code>shit --create test.pkg</code> We will get a package <code>test.pkg</code> Compress it, you will get:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .pkgtype</span></span></code></pre></div><h3 id="file-description" tabindex="-1">File Description <a class="header-anchor" href="#file-description" aria-label="Permalink to &quot;File Description&quot;">​</a></h3><ul><li>.pkgtype: the package&#39;s type, DO <code>NOT</code> EDIT!</li><li>package.json: the package configure you need to edit, it includes: <ul><li>authors: the package&#39;s authors</li><li>description: the package&#39;s description</li><li>license: the package&#39;s license (like MIT, Apache-2.0, etc)</li><li>name: the package&#39;s name</li><li>version: the package&#39;s version</li></ul></li></ul><h2 id="create-specialize-package" tabindex="-1">Create specialize package <a class="header-anchor" href="#create-specialize-package" aria-label="Permalink to &quot;Create specialize package&quot;">​</a></h2><p>At the most of time, we need to get a <code>type</code> of package. You can run <code>shit --create &lt;Package Name&gt; --type &lt;Package Type&gt;</code></p><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.pkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style</span></span></code></pre></div><p>You will get a style package named <code>test.pkg</code> Compress it, you will get:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.lua</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .pkgtype</span></span></code></pre></div><h3 id="file-description-1" tabindex="-1">File Description <a class="header-anchor" href="#file-description-1" aria-label="Permalink to &quot;File Description&quot;">​</a></h3><ul><li>style/main.lua: the lua configure, you need to write lua codes into it</li></ul>`,15)]))}const g=a(l,[["render",p]]);export{d as __pageData,g as default};
